name: Publish Package to GitHub Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., patch, minor, major, or specific version like 1.15.0)'
        required: true
        default: 'patch'

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@davila7'

      - name: Configure package for GitHub Packages
        working-directory: ./cli-tool
        run: |
          # Update package.json for GitHub Packages
          npm pkg set name="@davila7/claude-code-templates"
          npm pkg set repository.type="git"
          npm pkg set repository.url="git+https://github.com/davila7/claude-code-templates.git"
          npm pkg set publishConfig.registry="https://npm.pkg.github.com"
          
          echo "Updated package.json for GitHub Packages:"
          cat package.json

      - name: Install dependencies
        working-directory: ./cli-tool
        run: npm ci

      - name: Run tests
        working-directory: ./cli-tool
        run: npm test

      - name: Bump version
        working-directory: ./cli-tool
        run: |
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Specific version provided
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            # Semver bump (patch, minor, major)
            npm version ${{ github.event.inputs.version || 'patch' }} --no-git-tag-version
          fi
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Publish to GitHub Packages
        working-directory: ./cli-tool
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add cli-tool/package.json
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
          git tag "v${{ env.NEW_VERSION }}"
          git push origin main
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Create GitHub Release
        run: |
          gh release create "v${{ env.NEW_VERSION }}" \
            --title "Claude Code Templates v${{ env.NEW_VERSION }}" \
            --notes "## ðŸ“¦ New Release: v${{ env.NEW_VERSION }}

          **Installation:**
          \`\`\`bash
          npm install -g @davila7/claude-code-templates
          \`\`\`

          **GitHub Packages:**
          \`\`\`bash
          npm install -g @davila7/claude-code-templates --registry=https://npm.pkg.github.com
          \`\`\`

          **What's Changed:**
          - Package published to GitHub Packages
          - Available as @davila7/claude-code-templates
          - Full CLI functionality with all aliases (cct, claude-init, etc.)

          **Usage:**
          \`\`\`bash
          npx @davila7/claude-code-templates --help
          cct --help  # If installed globally
          \`\`\`

          ðŸ¤– Generated automatically by GitHub Actions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "ðŸŽ‰ Package Published Successfully!"
          echo "================================="
          echo "Package: @davila7/claude-code-templates"
          echo "Version: ${{ env.NEW_VERSION }}"
          echo "Registry: GitHub Packages"
          echo ""
          echo "Install with:"
          echo "npm install -g @davila7/claude-code-templates --registry=https://npm.pkg.github.com"